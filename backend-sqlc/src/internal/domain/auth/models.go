// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0

package auth

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type RolesStatus string

const (
	RolesStatusDISABLED RolesStatus = "DISABLED"
	RolesStatusENABLED  RolesStatus = "ENABLED"
	RolesStatusDRAFT    RolesStatus = "DRAFT"
)

func (e *RolesStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = RolesStatus(s)
	case string:
		*e = RolesStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for RolesStatus: %T", src)
	}
	return nil
}

type NullRolesStatus struct {
	RolesStatus RolesStatus
	Valid       bool // Valid is true if RolesStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullRolesStatus) Scan(value interface{}) error {
	if value == nil {
		ns.RolesStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.RolesStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullRolesStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.RolesStatus), nil
}

type UsersStatus string

const (
	UsersStatusDISABLED UsersStatus = "DISABLED"
	UsersStatusENABLED  UsersStatus = "ENABLED"
	UsersStatusDRAFT    UsersStatus = "DRAFT"
)

func (e *UsersStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UsersStatus(s)
	case string:
		*e = UsersStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for UsersStatus: %T", src)
	}
	return nil
}

type NullUsersStatus struct {
	UsersStatus UsersStatus
	Valid       bool // Valid is true if UsersStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullUsersStatus) Scan(value interface{}) error {
	if value == nil {
		ns.UsersStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UsersStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullUsersStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.UsersStatus), nil
}

type Permission struct {
	ID         int64
	RoleID     int64
	ModuleName string
	Create     bool
	Read       bool
	Update     bool
	Delete     bool
	Export     bool
	Import     bool
}

type Role struct {
	ID            int64
	Name          string
	Status        RolesStatus
	CreatedAt     time.Time
	UpdatedAt     sql.NullTime
	LastUpdatedBy sql.NullString
}

type RolesUser struct {
	RoleID int64
	UserID int64
}

type User struct {
	ID                int64
	Name              string
	Username          sql.NullString
	Password          string
	StaffID           sql.NullString
	Email             string
	EmailConfirmation sql.NullBool
	Status            UsersStatus
	CreatedAt         time.Time
	UpdatedAt         sql.NullTime
	LastUpdatedBy     sql.NullString
}
